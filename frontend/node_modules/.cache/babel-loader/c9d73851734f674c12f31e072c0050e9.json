{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/stockify/frontend3/src/pages/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusFill from \"@iconify/icons-eva/plus-fill\";\nimport { Link as RouterLink } from \"react-router-dom\"; // material\n\nimport { Button, Container, Stack, Typography, Card } from \"@mui/material\"; // components\n\nimport Page from \"../components/Page\";\nimport { clearErrors, getProduct } from \"../actions/productAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../components/Loader/Loader\";\nimport { useAlert } from \"react-alert\"; // import UserProducts from \"src/pages/UserProducts\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inventory() {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    products\n  } = useSelector(state => state.products);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getProduct());\n  }, [dispatch, error, alert]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // <Fragment>\n    _jsxDEV(Page, {\n      title: \"Dashboard: Inventory | Stokify\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          mb: 5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: RouterLink,\n            to: \"/dashboard/newproduct\",\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: plusFill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 28\n            }, this),\n            children: \"New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          mb: 5,\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: products && products.map(product => /*#__PURE__*/_jsxDEV(Card, {\n            product: product\n          }, product._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) // </Fragment>\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Inventory, \"JhFbTP67Ad9BqC0U/oanDQz34j0=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/stockify/frontend3/src/pages/Inventory.js"],"names":["React","Fragment","useEffect","Icon","plusFill","Link","RouterLink","Button","Container","Stack","Typography","Card","Page","clearErrors","getProduct","useSelector","useDispatch","Loader","useAlert","Inventory","alert","dispatch","loading","error","products","state","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,IAA/C,QAA2D,eAA3D,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,0BAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,KAAK,GAAGF,QAAQ,EAAtB;AACA,QAAMG,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAAhD;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,KAAJ,EAAW;AACTH,MAAAA,KAAK,CAACG,KAAN,CAAYA,KAAZ;AACAF,MAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACD;;AACDQ,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,GANQ,EAMN,CAACO,QAAD,EAAWE,KAAX,EAAkBH,KAAlB,CANM,CAAT;AAQA,sBACE,QAAC,QAAD;AAAA,cACGE,OAAO,gBACN,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADM;AAAA;AAGN;AACA,YAAC,IAAD;AAAM,MAAA,KAAK,EAAC,gCAAZ;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,UAAU,EAAC,QAFb;AAGE,UAAA,cAAc,EAAC,eAHjB;AAIE,UAAA,EAAE,EAAE,CAJN;AAAA,kCAME,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,SAAS,EAAEhB,UAFb;AAGE,YAAA,EAAE,EAAC,uBAHL;AAIE,YAAA,SAAS,eAAE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,KAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,UAAU,EAAC,QAHb;AAIE,UAAA,cAAc,EAAC,eAJjB;AAAA,oBAMGoB,QAAQ,IACPA,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACX,QAAC,IAAD;AAAwB,YAAA,OAAO,EAAEA;AAAjC,aAAWA,OAAO,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAPJ;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJM,CAsCN;;AAvCJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAzDuBT,S;UACRD,Q,EACGF,W,EACoBD,W;;;KAHfI,S","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusFill from \"@iconify/icons-eva/plus-fill\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n// material\nimport { Button, Container, Stack, Typography, Card } from \"@mui/material\";\n// components\nimport Page from \"../components/Page\";\nimport { clearErrors, getProduct } from \"../actions/productAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../components/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n\n// import UserProducts from \"src/pages/UserProducts\";\n\nexport default function Inventory() {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { loading, error, products } = useSelector((state) => state.products);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(getProduct());\n  }, [dispatch, error, alert]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        // <Fragment>\n        <Page title=\"Dashboard: Inventory | Stokify\">\n          <Container>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              mb={5}\n            >\n              <Typography variant=\"h4\" gutterBottom>\n                Inventory\n              </Typography>\n              <Button\n                variant=\"contained\"\n                component={RouterLink}\n                to=\"/dashboard/newproduct\"\n                startIcon={<Icon icon={plusFill} />}\n              >\n                New Item\n              </Button>\n            </Stack>\n\n            <Stack\n              mb={5}\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              {products &&\n                products.map((product) => (\n                  <Card key={product._id} product={product} />\n                ))}\n            </Stack>\n          </Container>\n        </Page>\n        // </Fragment>\n      )}\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}