{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/stockify/frontend3/src/components/authentication/register/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\nimport { useNavigate } from \"react-router-dom\"; // material\n\nimport { Stack, TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().min(30, \"Too Short!\").max(4, \"Too Long!\").required(\"Name is required\"),\n    phoneNumber: Yup.string().min(11, \"Phone Number must be of 11 digits!\").max(11, \"Phone Number must be of 11 digits!\").required(\"Phone Number is Required\"),\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\").min(8, \"Password is  too Short!\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name\",\n          ...getFieldProps(\"name\"),\n          error: Boolean(touched.name && errors.name),\n          helperText: touched.name && errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email address\",\n          ...getFieldProps(\"email\"),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"phoneNumber\",\n          type: \"number\",\n          label: \"Phone Number\",\n          ...getFieldProps(\"phoneNumber\"),\n          error: Boolean(touched.phoneNumber && errors.phoneNumber),\n          helperText: touched.phoneNumber && errors.phoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? \"text\" : \"password\",\n          label: \"Password\",\n          ...getFieldProps(\"password\"),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? \"text\" : \"confirmPassword\",\n          label: \"Confirm Password\",\n          ...getFieldProps(\"confirmPassword\"),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          },\n          error: Boolean(touched.confirmPassword && errors.confirmPassword),\n          helperText: touched.confirmPassword && errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [\"Upload Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-css top\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"registerImage\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"Avatar Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"avatar\",\n              accept: \"image/*\" // onChange={registerDataChange}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/stockify/frontend3/src/components/authentication/register/RegisterForm.js"],"names":["Yup","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","RegisterForm","navigate","showPassword","setShowPassword","RegisterSchema","object","shape","name","string","min","max","required","phoneNumber","email","password","confirmPassword","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","Boolean","endAdornment","prev"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\nimport { useNavigate } from \"react-router-dom\";\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(30, \"Too Short!\")\n      .max(4, \"Too Long!\")\n      .required(\"Name is required\"),\n    phoneNumber: Yup.string()\n      .min(11, \"Phone Number must be of 11 digits!\")\n      .max(11, \"Phone Number must be of 11 digits!\")\n      .required(\"Phone Number is Required\"),\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password is  too Short!\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phoneNumber: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", { replace: true });\n    },\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            {...getFieldProps(\"name\")}\n            error={Boolean(touched.name && errors.name)}\n            helperText={touched.name && errors.name}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps(\"email\")}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n          <TextField\n            fullWidth\n            autoComplete=\"phoneNumber\"\n            type=\"number\"\n            label=\"Phone Number\"\n            {...getFieldProps(\"phoneNumber\")}\n            error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n            helperText={touched.phoneNumber && errors.phoneNumber}\n          />\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            label=\"Password\"\n            {...getFieldProps(\"password\")}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => setShowPassword((prev) => !prev)}\n                  >\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? \"text\" : \"confirmPassword\"}\n            label=\"Confirm Password\"\n            {...getFieldProps(\"confirmPassword\")}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => setShowPassword((prev) => !prev)}\n                  >\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n            helperText={touched.confirmPassword && errors.confirmPassword}\n          />\n          <div className=\"mb-1\">\n            Upload Image <span className=\"font-css top\">*</span>\n            <div id=\"registerImage\">\n              <img src=\"\" alt=\"Avatar Preview\" />\n              <input\n                type=\"file\"\n                name=\"avatar\"\n                accept=\"image/*\"\n                // onChange={registerDataChange}\n              />\n            </div>\n          </div>\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}