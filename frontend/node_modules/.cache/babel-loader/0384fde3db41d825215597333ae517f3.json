{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/stockify/frontend3/src/pages/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusFill from \"@iconify/icons-eva/plus-fill\";\nimport { Link as RouterLink } from \"react-router-dom\"; // material\n\nimport { Button, Container, Stack, Typography, Card } from \"@mui/material\"; // components\n\nimport Page from \"../components/Page\";\nimport { clearErrors, getProduct } from \"../actions/productAction\";\nimport { useSelector, useDispatch } from \"react-redux\"; // import Loader from \"../layout/Loader/Loader\";\n\nimport { useAlert } from \"react-alert\";\nimport UserProducts from \"src/pages/UserProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inventory() {\n  _s();\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    products\n  } = useSelector(state => state.products);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getProduct());\n  }, [dispatch, error, alert]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        title: \"Dashboard: Inventory | Stokify\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            mb: 5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              children: \"Inventory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: RouterLink,\n              to: \"/dashboard/newproduct\",\n              startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                icon: plusFill\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 28\n              }, this),\n              children: \"New Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            mb: 5,\n            direction: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: products && products.map(product => /*#__PURE__*/_jsxDEV(Card, {\n              product: product\n            }, product._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Inventory, \"6Y72ajqlCoMEpe4eccSxiq6WiFQ=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/stockify/frontend3/src/pages/Inventory.js"],"names":["React","Fragment","useEffect","Icon","plusFill","Link","RouterLink","Button","Container","Stack","Typography","Card","Page","clearErrors","getProduct","useSelector","useDispatch","useAlert","UserProducts","Inventory","alert","dispatch","error","products","state","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC,C,CACA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CC,IAA/C,QAA0D,eAA1D,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,0BAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAAvC;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,KAAJ,EAAW;AACTF,MAAAA,KAAK,CAACE,KAAN,CAAYA,KAAZ;AACAD,MAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACD;;AACDQ,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,GANQ,EAMN,CAACO,QAAD,EAAWC,KAAX,EAAkBF,KAAlB,CANM,CAAT;AAQA,sBACE,QAAC,QAAD;AAAA,2BAIE,QAAC,QAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,gCAAZ;AAAA,+BACE,QAAC,SAAD;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,SAAS,EAAC,KADZ;AAEE,YAAA,UAAU,EAAC,QAFb;AAGE,YAAA,cAAc,EAAC,eAHjB;AAIE,YAAA,EAAE,EAAE,CAJN;AAAA,oCAME,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAyB,cAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eASE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,SAAS,EAAEd,UAFb;AAGE,cAAA,EAAE,EAAC,uBAHL;AAIE,cAAA,SAAS,eAAE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAoBE,QAAC,KAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,SAAS,EAAC,KAFZ;AAGE,YAAA,UAAU,EAAC,QAHb;AAIE,YAAA,cAAc,EAAC,eAJjB;AAAA,sBAMGmB,QAAQ,IACPA,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACX,QAAC,IAAD;AAAwB,cAAA,OAAO,EAAEA;AAAjC,eAAWA,OAAO,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,oBADF;AAPJ;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAzDuBR,S;UACRF,Q,EACGD,W,EACWD,W;;;KAHNI,S","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport plusFill from \"@iconify/icons-eva/plus-fill\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\n// material\nimport { Button, Container, Stack, Typography ,Card} from \"@mui/material\";\n// components\nimport Page from \"../components/Page\";\nimport { clearErrors, getProduct } from \"../actions/productAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n\nimport UserProducts from \"src/pages/UserProducts\";\n\nexport default function Inventory() {\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const { error, products } = useSelector((state) => state.products);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(getProduct());\n  }, [dispatch, error, alert]);\n\n  return (\n    <Fragment>\n      {/* {loading ? (\n        <Loader />\n      ) : ( */}\n      <Fragment>\n        <Page title=\"Dashboard: Inventory | Stokify\">\n          <Container>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              mb={5}\n            >\n              <Typography variant=\"h4\" gutterBottom>\n                Inventory\n              </Typography>\n              <Button\n                variant=\"contained\"\n                component={RouterLink}\n                to=\"/dashboard/newproduct\"\n                startIcon={<Icon icon={plusFill} />}\n              >\n                New Item\n              </Button>\n            </Stack>\n\n            <Stack\n              mb={5}\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n            >\n              {products &&\n                products.map((product) => (\n                  <Card key={product._id} product={product} />\n                ))}\n            </Stack>\n          </Container>\n        </Page>\n      </Fragment>\n      {/* )} */}\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}