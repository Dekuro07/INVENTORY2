{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/stockify/frontend3/src/pages/newProduct/newItem.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Typography } from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\nimport { useNavigate } from \"react-router-dom\"; // material\n\nimport { Stack, TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string().min(30, \"Too Short!\").max(4, \"Too Long!\").required(\"Name is required\"),\n    phoneNumber: Yup.string().min(11, \"Phone Number must be of 11 digits!\").max(11, \"Phone Number must be of 11 digits!\").required(\"Phone Number is Required\"),\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\").min(8, \"Password is  too Short!\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phoneNumber: \"\"\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mb: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: \"text.secondary\"\n        },\n        children: \"Enter Product details below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Name\",\n            ...getFieldProps(\"name\"),\n            error: Boolean(touched.name && errors.name),\n            helperText: touched.name && errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            fullWidth: true,\n            size: \"large\",\n            type: \"submit\",\n            variant: \"contained\",\n            loading: isSubmitting,\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/stockify/frontend3/src/pages/newProduct/newItem.js"],"names":["Container","Typography","Yup","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","RegisterForm","navigate","showPassword","setShowPassword","RegisterSchema","object","shape","name","string","min","max","required","phoneNumber","email","password","confirmPassword","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","mb","color","Boolean"],"mappings":"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","sourcesContent":["import { Container, Typography } from \"@mui/material\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\nimport { useNavigate } from \"react-router-dom\";\n// material\nimport { Stack, TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(30, \"Too Short!\")\n      .max(4, \"Too Long!\")\n      .required(\"Name is required\"),\n    phoneNumber: Yup.string()\n      .min(11, \"Phone Number must be of 11 digits!\")\n      .max(11, \"Phone Number must be of 11 digits!\")\n      .required(\"Phone Number is Required\"),\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"Email is required\"),\n    password: Yup.string()\n      .required(\"Password is required\")\n      .min(8, \"Password is  too Short!\"),\n    confirmPassword: Yup.string().required(\"Confirm Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phoneNumber: \"\",\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", { replace: true });\n    },\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Stack sx={{ mb: 5 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Add New Product\n        </Typography>\n        <Typography sx={{ color: \"text.secondary\" }}>\n          Enter Product details below.\n        </Typography>\n      </Stack>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              {...getFieldProps(\"name\")}\n              error={Boolean(touched.name && errors.name)}\n              helperText={touched.name && errors.name}\n            />\n\n           \n            <LoadingButton\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              loading={isSubmitting}\n            >\n              Add User\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}