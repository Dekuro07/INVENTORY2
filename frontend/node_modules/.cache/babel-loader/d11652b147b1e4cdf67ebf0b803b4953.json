{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/stockify/frontend3/src/pages/newProduct/newItem.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Icon } from \"@iconify/react\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\"; // material\n\nimport { Link, Stack, TextField, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email must be a valid email address\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mb: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: \"text.secondary\"\n        },\n        children: \"Enter new user details below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"username\",\n            type: \"email\",\n            label: \"Email address\",\n            ...getFieldProps(\"email\"),\n            error: Boolean(touched.email && errors.email),\n            helperText: touched.email && errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"current-password\",\n            type: showPassword ? \"text\" : \"password\",\n            label: \"Password\",\n            ...getFieldProps(\"password\"),\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleShowPassword,\n                  edge: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    icon: showPassword ? eyeFill : eyeOffFill\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            },\n            error: Boolean(touched.password && errors.password),\n            helperText: touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/stockify/frontend3/src/pages/newProduct/newItem.js"],"names":["Yup","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Container","Typography","Icon","eyeFill","eyeOffFill","Stack","TextField","IconButton","InputAdornment","LoadingButton","LoginForm","navigate","showPassword","setShowPassword","LoginSchema","object","shape","email","string","required","password","formik","initialValues","remember","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","mb","color","Boolean","endAdornment","my"],"mappings":"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","sourcesContent":["import * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { useFormik, Form, FormikProvider } from \"formik\";\nimport { Container, Typography } from \"@mui/material\";\nimport { Icon } from \"@iconify/react\";\nimport eyeFill from \"@iconify/icons-eva/eye-fill\";\nimport eyeOffFill from \"@iconify/icons-eva/eye-off-fill\";\n// material\nimport {\n  Link,\n  Stack,\n\n  TextField,\n  IconButton,\n  InputAdornment,\n\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n\n// ----------------------------------------------------------------------\n\nexport default function LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email(\"Email must be a valid email address\")\n      .required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      remember: true,\n    },\n    validationSchema: LoginSchema,\n    onSubmit: () => {\n      navigate(\"/dashboard/app\", { replace: true });\n    },\n  });\n\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } =\n    formik;\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Stack sx={{ mb: 5 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          New User\n        </Typography>\n        <Typography sx={{ color: \"text.secondary\" }}>\n          Enter new user details below.\n        </Typography>\n      </Stack>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3}>\n            <TextField\n              fullWidth\n              autoComplete=\"username\"\n              type=\"email\"\n              label=\"Email address\"\n              {...getFieldProps(\"email\")}\n              error={Boolean(touched.email && errors.email)}\n              helperText={touched.email && errors.email}\n            />\n\n            <TextField\n              fullWidth\n              autoComplete=\"current-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              label=\"Password\"\n              {...getFieldProps(\"password\")}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton onClick={handleShowPassword} edge=\"end\">\n                      <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              error={Boolean(touched.password && errors.password)}\n              helperText={touched.password && errors.password}\n            />\n          </Stack>\n\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            sx={{ my: 2 }}\n          ></Stack>\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            \n            variant=\"contained\"\n            loading={isSubmitting}\n          >\n            Create User\n          </LoadingButton>\n        </Form>\n      </FormikProvider>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}